@using Microsoft.AspNetCore.Identity


@inject SignInManager<RPG_Manager.Areas.RPGArea.Models.ApplicationUser> SignInManager
@inject UserManager<RPG_Manager.Areas.RPGArea.Models.ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="RPGArea" asp-controller="AuthorizationAccount" asp-action="Logout" method="post" id="logoutForm">
        <ul class="nav navbar-nav">
            <li class="navbar-content"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="navbar-content"><a asp-area="RPGArea" asp-controller="Character" asp-action="Characters">Characters</a></li>
            <li class="navbar-content"><a asp-area="RPGArea" asp-controller="Character" asp-action="Campaigns">Campaigns</a></li>
            <li class="navbar-content"><a class="navbar-right" asp-area="RPGArea" asp-controller="Character" asp-action="AccountDetails" title="Manage">Hello, @UserManager.GetUserName(User)!</a></li>
            <li class=""><button type="submit" class="btn btn-link navbar-btn navbar-link navbar-right navbar-content" style="padding:15px; text-decoration:none; border:none">Log out</button></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="navbar-content"><a  asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="navbar-content"><a class="navbar-right" asp-area="RPGArea" asp-controller="AuthorizationAccount" asp-action="Register">Register</a></li>
        <li class="navbar-content"><a class="navbar-right" asp-area="RPGArea" asp-controller="AuthorizationAccount" asp-action="Login">Log in</a></li>
    </ul>
}